    @256
    D=A
    @SP
    M=D
    @Sys.init$RETADDR0
    D=A
    @SP
    A=M
    M=D
    @SP
    M=M+1    @LCL
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @ARG
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @THIS
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @THAT
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @5
    D=A
    @0
    D=A-D
    @SP
    A=M
    D=A-D
    @ARG
    M=D
    @SP
    D=M
    @LCL
    M=D
    @Sys.init
    0;JMP
  (Sys.init$RETADDR0)
(Sys.init)
    @Sys.init.push_temp_i
    M=0
    @Sys.init.push_temp_i
    D=M
    @0
    D=D-A
    @Sys.init.push_term_i
    D;JEQ
    @0
    D=A
    @SP
    A=M
    M=D
    @SP
    M=M+1
  (@Sys.init.push_term_i)
    @4
    D=A
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @Main.fibonacci$RETADDR2
    D=A
    @SP
    A=M
    M=D
    @SP
    M=M+1    @LCL
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @ARG
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @THIS
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @THAT
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @5
    D=A
    @1
    D=A-D
    @SP
    A=M
    D=A-D
    @ARG
    M=D
    @SP
    D=M
    @LCL
    M=D
    @Main.fibonacci
    0;JMP
  (Main.fibonacci$RETADDR2)
  (Sys.init$WHILE)
    @Sys.init$WHILE
    0;JMP
(Main.fibonacci)
    @Main.fibonacci.push_temp_i
    M=0
    @Main.fibonacci.push_temp_i
    D=M
    @0
    D=D-A
    @Main.fibonacci.push_term_i
    D;JEQ
    @0
    D=A
    @SP
    A=M
    M=D
    @SP
    M=M+1
  (@Main.fibonacci.push_term_i)
    @0
    D=A
    @ARG
    A=M
    D=D+A
    @addr
    M=D
    @addr
    A=M
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @2
    D=A
    @SP
    A=M
    M=D
    @SP
    M=M+1
    @SP
    M=M-1
    @SP
    A=M
    D=M
    @SP
    M=M-1
    @SP
    A=M
    D=M-D
    @Main.fibonacci$RIGHTLT2
    D;JLT
    @SP
    A=M
    M=0
    @Main.fibonacci$WHATEVERLT2
    0;JMP
  (Main.fibonacci$RIGHTLT2)
    @SP
    A=M
    M=-1
    @Main.fibonacci$WHATEVERLT2
    0;JMP
  (Main.fibonacci$WHATEVERLT2)
    @SP
    M=M+1
    @SP
    M=M-1
    @SP
    A=M
    D=M
    @Main.fibonacci$IF_TRUE
    D;JNE
    @Main.fibonacci$IF_FALSE
    0;JMP
  (Main.fibonacci$IF_TRUE)
    @0
    D=A
    @ARG
    A=M
    D=D+A
    @addr
    M=D
    @addr
    A=M
    D=M
    @SP
    A=M
    M=D
    @SP
    M=M+1
